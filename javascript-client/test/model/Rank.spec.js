/*
 * StrafesNET Public API
 * ### How to use To request an api key open a support request in the [issue tracker](https://issues.strafes.net/client/index.php#/types/3/issues).  ### Default API request rate limits are as follows * 100 requests per minute * 3000 requests per hour  ### Game IDs ``` 1 Bhop 2 Surf ``` ### Style IDs ``` 1 Autohop 2 Scroll 3 Sideways 4 Half-Sideways 5 W-Only 6 A-Only 7 Backwards ``` 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StrafesNetPublicApi);
  }
}(this, function(expect, StrafesNetPublicApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Rank', function() {
      beforeEach(function() {
        instance = new StrafesNetPublicApi.Rank();
      });

      it('should create an instance of Rank', function() {
        // TODO: update the code to test Rank
        expect(instance).to.be.a(StrafesNetPublicApi.Rank);
      });

      it('should have the property ID (base name: "ID")', function() {
        // TODO: update the code to test the property ID
        expect(instance).to.have.property('ID');
        // expect(instance.ID).to.be(expectedValueLiteral);
      });

      it('should have the property user (base name: "User")', function() {
        // TODO: update the code to test the property user
        expect(instance).to.have.property('user');
        // expect(instance.user).to.be(expectedValueLiteral);
      });

      it('should have the property style (base name: "Style")', function() {
        // TODO: update the code to test the property style
        expect(instance).to.have.property('style');
        // expect(instance.style).to.be(expectedValueLiteral);
      });

      it('should have the property mode (base name: "Mode")', function() {
        // TODO: update the code to test the property mode
        expect(instance).to.have.property('mode');
        // expect(instance.mode).to.be(expectedValueLiteral);
      });

      it('should have the property game (base name: "Game")', function() {
        // TODO: update the code to test the property game
        expect(instance).to.have.property('game');
        // expect(instance.game).to.be(expectedValueLiteral);
      });

      it('should have the property rank (base name: "Rank")', function() {
        // TODO: update the code to test the property rank
        expect(instance).to.have.property('rank');
        // expect(instance.rank).to.be(expectedValueLiteral);
      });

      it('should have the property skill (base name: "Skill")', function() {
        // TODO: update the code to test the property skill
        expect(instance).to.have.property('skill');
        // expect(instance.skill).to.be(expectedValueLiteral);
      });

      it('should have the property placement (base name: "Placement")', function() {
        // TODO: update the code to test the property placement
        expect(instance).to.have.property('placement');
        // expect(instance.placement).to.be(expectedValueLiteral);
      });

    });
  });

}));
