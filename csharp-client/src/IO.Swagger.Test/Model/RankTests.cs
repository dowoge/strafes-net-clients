/* 
 * StrafesNET Public API
 *
 * ### How to use To request an api key open a support request in the [issue tracker](https://issues.strafes.net/client/index.php#/types/3/issues).  ### Default API request rate limits are as follows * 100 requests per minute * 3000 requests per hour  ### Game IDs ``` 1 Bhop 2 Surf ``` ### Style IDs ``` 1 Autohop 2 Scroll 3 Sideways 4 Half-Sideways 5 W-Only 6 A-Only 7 Backwards ``` 
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing Rank
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class RankTests
    {
        // TODO uncomment below to declare an instance variable for Rank
        //private Rank instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Rank
            //instance = new Rank();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Rank
        /// </summary>
        [Test]
        public void RankInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Rank
            //Assert.IsInstanceOfType<Rank> (instance, "variable 'instance' is a Rank");
        }


        /// <summary>
        /// Test the property 'ID'
        /// </summary>
        [Test]
        public void IDTest()
        {
            // TODO unit test for the property 'ID'
        }
        /// <summary>
        /// Test the property 'User'
        /// </summary>
        [Test]
        public void UserTest()
        {
            // TODO unit test for the property 'User'
        }
        /// <summary>
        /// Test the property 'Style'
        /// </summary>
        [Test]
        public void StyleTest()
        {
            // TODO unit test for the property 'Style'
        }
        /// <summary>
        /// Test the property 'Mode'
        /// </summary>
        [Test]
        public void ModeTest()
        {
            // TODO unit test for the property 'Mode'
        }
        /// <summary>
        /// Test the property 'Game'
        /// </summary>
        [Test]
        public void GameTest()
        {
            // TODO unit test for the property 'Game'
        }
        /// <summary>
        /// Test the property '_Rank'
        /// </summary>
        [Test]
        public void _RankTest()
        {
            // TODO unit test for the property '_Rank'
        }
        /// <summary>
        /// Test the property 'Skill'
        /// </summary>
        [Test]
        public void SkillTest()
        {
            // TODO unit test for the property 'Skill'
        }
        /// <summary>
        /// Test the property 'Placement'
        /// </summary>
        [Test]
        public void PlacementTest()
        {
            // TODO unit test for the property 'Placement'
        }

    }

}
