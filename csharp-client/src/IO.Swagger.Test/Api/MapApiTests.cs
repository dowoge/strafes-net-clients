/* 
 * StrafesNET Public API
 *
 * ### How to use To request an api key open a support request in the [issue tracker](https://issues.strafes.net/client/index.php#/types/3/issues).  ### Default API request rate limits are as follows * 100 requests per minute * 3000 requests per hour  ### Game IDs ``` 1 Bhop 2 Surf ``` ### Style IDs ``` 1 Autohop 2 Scroll 3 Sideways 4 Half-Sideways 5 W-Only 6 A-Only 7 Backwards ``` 
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing MapApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MapApiTests
    {
        private MapApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MapApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MapApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MapApi
            //Assert.IsInstanceOfType(typeof(MapApi), instance, "instance is a MapApi");
        }

        
        /// <summary>
        /// Test MapGet
        /// </summary>
        [Test]
        public void MapGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? game = null;
            //int? page = null;
            //var response = instance.MapGet(game, page);
            //Assert.IsInstanceOf<List<Dictionary>> (response, "response is List<Dictionary>");
        }
        
        /// <summary>
        /// Test MapMapIdGet
        /// </summary>
        [Test]
        public void MapMapIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? mapId = null;
            //var response = instance.MapMapIdGet(mapId);
            //Assert.IsInstanceOf<Dictionary> (response, "response is Dictionary");
        }
        
    }

}
