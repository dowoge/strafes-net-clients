/**
 * StrafesNET Public API
 * ### How to use To request an api key open a support request in the [issue tracker](https://issues.strafes.net/client/index.php#/types/3/issues).  ### Default API request rate limits are as follows * 100 requests per minute * 3000 requests per hour  ### Game IDs ``` 1 Bhop 2 Surf ``` ### Style IDs ``` 1 Autohop 2 Scroll 3 Sideways 4 Half-Sideways 5 W-Only 6 A-Only 7 Backwards ``` 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.21.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * RankApi.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_API_RankApi_H_
#define IO_SWAGGER_CLIENT_API_RankApi_H_


#include "../ApiClient.h"

#include "Object.h"
#include "Rank.h"

#include <boost/optional.hpp>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  RankApi
{
public:
    RankApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~RankApi();
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// Top ranked players, paged at 50 per page.
    /// </remarks>
    /// <param name="style">Style ID filter</param>
    /// <param name="game">Game ID filter</param>
    /// <param name="page">Page api results, Page size is 50. (optional)</param>
    pplx::task<std::vector<std::shared_ptr<Rank>>> rankGet(
        int32_t style,
        int32_t game,
        boost::optional<int32_t> page
    );
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// Get rank of user by their id.
    /// </remarks>
    /// <param name="userId">User ID filter</param>
    /// <param name="style">Style ID filter</param>
    /// <param name="game">Game ID filter</param>
    pplx::task<std::shared_ptr<Rank>> rankUserIdGet(
        int32_t userId,
        int32_t style,
        int32_t game
    );

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_API_RankApi_H_ */

